# Project Architecture Rules

## Core Principles
- Single Source of Truth (SSOT):
  - TagManager: Only component that uses hardware clients (ProductivityPLC and paramiko)
  - ConfigManager: Handles all configurations
  - MessageBroker: Controls all pub/sub messaging
  - UIUpdateManager: Manages all UI updates

## Python Environment Requirements
1. Virtual Environment:
   - Must use venv for isolation
   - Must be named .venv
   - Must be excluded from git
   - Must install all dependencies from requirements.txt

2. Package Management:
   - Must use requirements.txt for dependencies
   - Must use setup.py for development installation
   - Must use pip install -e . for local development
   - Must specify version constraints

3. Dependencies:
   - Core dependencies must be explicitly versioned
   - Development tools must be in separate section
   - Must document purpose of each dependency
   - Must maintain minimum Python version compatibility

## Hardware Client Requirements
1. PLC Communication:
   - Must use productivity library (from productivity import ProductivityPLC)
   - Must use async/await pattern
   - Must use CSV tag file for definitions
   - Must implement regular polling

2. SSH Communication:
   - Must use paramiko library (import paramiko)
   - Write-only commands
   - No polling required
   - Simple command interface

## Access Patterns

1. Direct Access Components:
   - ConfigManager:
     - Direct access allowed for all components
     - Used for static configuration loading
     - Runtime updates received via MessageBroker

2. MessageBroker Communication:
   - Required for all runtime communication
   - Required for all hardware commands
   - Required for all state changes
   - Required for all configuration updates
   - Required for all error reporting
   - Used for tag value updates and requests
   - Handles command/response patterns via request/response

3. Hardware Communication:
   - Controllers:
     - Send commands via MessageBroker to TagManager
     - Use "tag/set" for commands
     - Use "tag/get" for status
     - Never access hardware directly
   
   - TagManager:
     - Only component to use hardware clients (PLC and SSH)
     - Uses exact PLC tag names from hardware
     - No internal tag name translations
     - Manages all hardware read/write operations
     - Publishes hardware updates via MessageBroker
     - All components must use MessageBroker to access tags

## Logging Standards
1. Logger Usage:
   - Must use loguru for all logging
   - Must include context in log messages
   - Must use appropriate log levels
   - Must handle async logging properly

## Qt Style Rules

1. Frame Style Constants:
   - Must use QFrame.Shape.* for frame shapes
   - Must use QFrame.Shadow.* for frame shadows
   - Must use proper Qt6 enum classes for all Qt constants

2. Alignment Constants:
   - Must use Qt.AlignmentFlag.* for alignments
   - No direct use of Qt5-style constants

3. Size Policy Constants:
   - Must use QSizePolicy.Policy.* for size policies
   - Must use proper enum classes for all policy settings

## Testing Standards
1. Test Requirements:
   - Must use pytest framework
   - Must use pytest-asyncio for async tests
   - Must use pytest-qt for UI tests
   - Must maintain test coverage standards

## Code Quality Standards
1. Implementation Requirements:
   - Write complete implementations (no placeholders)
   - Provide full code examples
   - Only modify existing code when justified

2. Formatting:
   - Must use black for code formatting
   - Must use pylint for code linting
   - Must use mypy for type checking

3. Documentation:
   - Must maintain up-to-date docstrings
   - Must document all public interfaces
   - Must include type hints
   - Must document async behavior

## Error Handling Rules
1. Required Checks:
   - All MessageBroker operations
   - All cleanup chains
   - All widget references
   - All manager references

2. Async Requirements:
   - All cleanup methods
   - All UI update handlers
   - All message operations
   - All hardware operations

3. Config Access:
   - Core services may access ConfigManager directly
   - UI components must use UIUpdateManager
   - Config changes must be published through MessageBroker

4. Error Logging:
   - All exceptions must be caught and logged
   - All error messages must be descriptive
   - All error handlers must include context
